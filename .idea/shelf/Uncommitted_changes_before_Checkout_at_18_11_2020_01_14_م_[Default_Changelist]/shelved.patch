Index: app/src/main/java/com/unicom/wasalakclientproduct/ui/order/OrderDetailsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.unicom.wasalakclientproduct.ui.order;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.unicom.wasalakclientproduct.R;\r\nimport com.unicom.wasalakclientproduct.databinding.FragmentOrderDetailsBinding;\r\nimport com.unicom.wasalakclientproduct.model.order.OrderResponse;\r\nimport com.unicom.wasalakclientproduct.ui.cartConfirm.CartProductsAdapter;\r\nimport com.unicom.wasalakclientproduct.ui.guest.GuestActivity;\r\nimport com.unicom.wasalakclientproduct.utils.Resource;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Locale;\r\n\r\nimport javax.inject.Inject;\r\n\r\nimport dagger.hilt.android.AndroidEntryPoint;\r\nimport dagger.hilt.android.scopes.ActivityScoped;\r\nimport es.dmoral.toasty.Toasty;\r\n\r\n@AndroidEntryPoint\r\npublic class OrderDetailsFragment extends Fragment implements OnMapReadyCallback {\r\n\r\n    //region Members\r\n    private String TAG = this.getClass().getSimpleName();\r\n    private FragmentOrderDetailsBinding binding;\r\n    private OrderViewModel viewModel;\r\n    private NavController navController;\r\n    private int orderId;\r\n    private Boolean showMore = false;\r\n    private GoogleMap googleMap;\r\n    ProductsAdapter productsAdapter;\r\n    OrderStatusAdapter orderStatusAdapter;\r\n    //endregion\r\n\r\n    //region Events\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        viewModel = new ViewModelProvider(this).get(OrderViewModel.class);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_order_details, container, false);\r\n        return binding.getRoot();\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        initMap();\r\n\r\n        if (navController == null) {\r\n            navController = Navigation.findNavController(view);\r\n        }\r\n\r\n        binding.topAppBar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                navController.navigateUp();\r\n            }\r\n        });\r\n\r\n\r\n        binding.setLifecycleOwner(this);\r\n        binding.setFragment(this);\r\n\r\n//        if (getArguments() != null) {\r\n//            {\r\n//                orderId = 20118; //OrderDetailsFragmentArgs.fromBundle(getArguments()).getOrderId();\r\n//                subscribeObserver(orderId);\r\n//            }\r\n\r\n//        }\r\n        orderId = 20118; //OrderDetailsFragmentArgs.fromBundle(getArguments()).getOrderId();\r\n        subscribeObserver(orderId);\r\n\r\n        binding.btnShowHideDetails.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (binding.clShowHide.getVisibility() == View.GONE) {\r\n                    binding.clShowHide.setVisibility(View.VISIBLE);\r\n                    binding.btnShowHideDetails.setText(getString(R.string.hide_details));\r\n                    binding.btnMoreUpdate.setText(getString(R.string.fewer_updates));\r\n                } else {\r\n                    binding.btnShowHideDetails.setText(getString(R.string.show_details));\r\n                    binding.btnMoreUpdate.setText(getString(R.string.more_updates));\r\n                    binding.clShowHide.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.btnMoreUpdate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                if (!showMore) {\r\n//                    showMore = true;\r\n//                    binding.btnMoreUpdate.setText(getString(R.string.fewer_updates));\r\n//                } else {\r\n//                    showMore = false;\r\n//                    binding.btnMoreUpdate.setText(getString(R.string.more_updates));\r\n//                }\r\n                if (binding.clShowHide.getVisibility() == View.GONE) {\r\n                    binding.clShowHide.setVisibility(View.VISIBLE);\r\n                    binding.btnShowHideDetails.setText(getString(R.string.hide_details));\r\n                    binding.btnMoreUpdate.setText(getString(R.string.fewer_updates));\r\n                } else {\r\n                    binding.btnShowHideDetails.setText(getString(R.string.show_details));\r\n                    binding.btnMoreUpdate.setText(getString(R.string.more_updates));\r\n                    binding.clShowHide.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        googleMap.clear();\r\n        googleMap.getUiSettings().setAllGesturesEnabled(false);\r\n        this.googleMap = googleMap;\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region Helper Functions\r\n\r\n    private void subscribeObserver(int id) {\r\n\r\n        viewModel.ObserveOrderDetail(id).observe(getViewLifecycleOwner(), new Observer<Resource<OrderResponse>>() {\r\n            @Override\r\n            public void onChanged(Resource<OrderResponse> orderResponseResource) {\r\n//                if (orderResponseResource.data != null && orderResponseResource.data.getSuccess()) {\r\n                    switch (orderResponseResource.status) {\r\n                        case LOADING:\r\n                            binding.progressBarFrame.setVisibility(View.VISIBLE);\r\n                            break;\r\n                        case ERROR:\r\n                            binding.progressBarFrame.setVisibility(View.GONE);\r\n                            break;\r\n                        case SUCCESS:\r\n                            binding.progressBarFrame.setVisibility(View.GONE);\r\n                            if (orderResponseResource.data.getResult() != null) {\r\n                                binding.setOrderData(orderResponseResource.data.getResult());\r\n\r\n                                //2020-10-26T06:46:09.63681\r\n                                String t = \"yyyy-MM-dd'T'HH:mm:ss\";\r\n                                String creationTimeFormat = \"dd MMM, yyyy - hh:mm aaa\";//20 أبريل، 2020 - 04:12 م\r\n                                String deliveryDateFormat = \"dd MMM, yyyy\";\r\n\r\n                                SimpleDateFormat sdf = new SimpleDateFormat(t, Locale.getDefault());\r\n                                SimpleDateFormat tf = new SimpleDateFormat(creationTimeFormat, Locale.getDefault());\r\n                                SimpleDateFormat df = new SimpleDateFormat(deliveryDateFormat, Locale.getDefault());\r\n\r\n                                java.util.Date dateCreationTimeObj = null;\r\n                                try {\r\n\r\n                                    if (orderResponseResource.data.getResult().getCreationTime() != null) {\r\n                                        dateCreationTimeObj = sdf.parse(orderResponseResource.data.getResult().getCreationTime());\r\n                                        Calendar dateBirthDate = Calendar.getInstance();\r\n                                        dateBirthDate.setTime(dateCreationTimeObj);\r\n                                        String creationTime = tf.format(dateCreationTimeObj.getTime());\r\n                                        binding.setCreationTime(creationTime);\r\n                                    }\r\n\r\n\r\n                                    if (orderResponseResource.data.getResult().getDeliveryDatetime() != null) {\r\n                                        dateCreationTimeObj = sdf.parse(orderResponseResource.data.getResult().getDeliveryDatetime());\r\n                                        Calendar dateDeliveryDate = Calendar.getInstance();\r\n                                        dateDeliveryDate.setTime(dateCreationTimeObj);\r\n                                        String deliveryDate = df.format(dateCreationTimeObj.getTime());\r\n                                        binding.setDeliveryDateTime(deliveryDate);\r\n                                    }\r\n\r\n\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                                Log.d(TAG, \"getOrdersDetails: \"+orderResponseResource.data.getResult().getOrdersDetails().size());\r\n                                Log.d(TAG, \"getOrderStatusesHistoryForClient: \"+orderResponseResource.data.getResult().getOrderStatusesHistoryForClient().size());\r\n                                if (orderResponseResource.data.getResult().getOrdersDetails() != null) {\r\n                                    productsAdapter=new ProductsAdapter();\r\n                                    productsAdapter.submitList(orderResponseResource.data.getResult().getOrdersDetails());\r\n                                    binding.setProductAdapter(productsAdapter);\r\n                                }\r\n\r\n                                if (orderResponseResource.data.getResult().getOrderStatusesHistoryForClient() != null) {\r\n                                    orderStatusAdapter=new OrderStatusAdapter();\r\n                                    orderStatusAdapter.submitList(orderResponseResource.data.getResult().getOrderStatusesHistoryForClient());\r\n                                    binding.setOrderStatusAdapter(orderStatusAdapter);\r\n                                }\r\n\r\n                            }\r\n                            break;\r\n                    }\r\n//                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void onCancelOrder() {\r\n        showCancelOrderDialog();\r\n\r\n\r\n    }\r\n\r\n    private void showCancelOrderDialog() {\r\n\r\n        new MaterialAlertDialogBuilder(getActivity(), R.style.material_theme_rounded)\r\n                .setTitle(getString(R.string.cancel_order))\r\n                .setView(R.layout.layout_cancel_order)\r\n                .setMessage(R.string.cancel_order_message)\r\n                .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.cancel();\r\n                    }\r\n                })\r\n                .setPositiveButton(R.string.cancel_order_confirm, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        EditText etNotes = ((AlertDialog) dialog).findViewById(R.id.etNote);\r\n                        String notes = etNotes.getText().toString();\r\n                        if (notes.trim().isEmpty()) {\r\n                            etNotes.requestFocus();\r\n                            Toasty.info(getContext(), getString(R.string.notes_mandatory));\r\n                            return;\r\n                        } else {\r\n                            int id = 20118;\r\n                            viewModel.ObserveOrderChangeStatus(id, notes, 0).observe(getViewLifecycleOwner(), new Observer<Resource<OrderResponse>>() {\r\n                                @Override\r\n                                public void onChanged(Resource<OrderResponse> orderResponseResource) {\r\n                                    //todo navigate from details to parent\r\n                                    Toasty.info(getContext(), getString(R.string.done));\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        dialog.cancel();\r\n                    }\r\n                })\r\n                .show();\r\n\r\n    }\r\n\r\n\r\n    private void initMap() {\r\n        SupportMapFragment mapFragment =\r\n                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);\r\n        if (mapFragment != null) {\r\n            mapFragment.getMapAsync(this);\r\n        }\r\n    }\r\n\r\n    public void drawMarker(double lat, double lng) {\r\n        LatLng location = new LatLng(lat, lng);\r\n        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(\r\n                location, 15);\r\n        googleMap.moveCamera(cameraUpdate);\r\n        googleMap.addMarker(new MarkerOptions()\r\n                .position(location)\r\n                .icon(bitmapDescriptorFromVector(getActivity(), R.drawable.ic_baseline_location))\r\n                .title(\"title\"));\r\n    }\r\n\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n\r\n\r\n    //endregion\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/unicom/wasalakclientproduct/ui/order/OrderDetailsFragment.java	(revision 8b603ae59342d94db8ab86136ec3dbe2a9825edd)
+++ app/src/main/java/com/unicom/wasalakclientproduct/ui/order/OrderDetailsFragment.java	(date 1605698086521)
@@ -38,19 +38,12 @@
 import com.unicom.wasalakclientproduct.R;
 import com.unicom.wasalakclientproduct.databinding.FragmentOrderDetailsBinding;
 import com.unicom.wasalakclientproduct.model.order.OrderResponse;
-import com.unicom.wasalakclientproduct.ui.cartConfirm.CartProductsAdapter;
-import com.unicom.wasalakclientproduct.ui.guest.GuestActivity;
 import com.unicom.wasalakclientproduct.utils.Resource;
-
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
 import java.util.Locale;
-
-import javax.inject.Inject;
-
 import dagger.hilt.android.AndroidEntryPoint;
-import dagger.hilt.android.scopes.ActivityScoped;
 import es.dmoral.toasty.Toasty;
 
 @AndroidEntryPoint
